package genetic_tetris;

import java.util.*;

public class Generic {
	private Weight[] w;
	private int size;

	public Generic(int count) {
		this.size = count;
		w = new Weight[this.size];

		Random rn = new Random();
		for (int i = 0; i < w.length; i++) {
			int n = i + 1;
			int r = 0;
			double b = rn.nextDouble() - 1;
			double c = rn.nextDouble();
			double cc = rn.nextDouble() + 1;
			double hw = rn.nextDouble() - 1;
			w[i] = new Weight(n, r, b, c, cc, hw);
		}
	}

	public Weight[] get_weight() {
		return w;

	}

	public void cross_over() {
		double result = Integer.MIN_VALUE;
		int idx = 0;

		// rank가 가장 큰 유전자 선택
		for (int i = 0; i < size; i++) {
			if (result < w[i].delete_line) {
				result = w[i].delete_line;
				idx = i;
			}
		}
		Weight fitness = w[idx];

		System.out.println("Delete line : " + fitness.delete_line);
		System.out.println("blank : " + fitness.blank_weight + " connected : " + fitness.connected_weight);
		System.out.println("line : " + fitness.complete_line_weight + " height weight : " + fitness.height_weight);

		w = new Weight[this.size];
		Random rn = new Random();

		for (int i = 0; i < size; i++) {
			double b = Math.random() *fitness.blank_weight;
			double c = Math.random()  
			double cc = rn.nextDouble() + fitness.connected_weight;
			double hw = (rn.nextDouble() * -1) + fitness.height_weight;
			w[i] = new Weight(i + 1, 0, b, c, cc, hw);
		}
	}

	public class Weight {
		int number = 0;
		double delete_line;
		double blank_weight;
		double complete_line_weight;
		double connected_weight;
		double height_weight;

		public Weight(int n, double r, double b, double c, double cc, double hw) {
			this.number = n;
			this.delete_line = r;
			this.blank_weight = b;
			this.complete_line_weight = c;
			this.connected_weight = cc;
			this.height_weight = hw;
		}

	}
}
