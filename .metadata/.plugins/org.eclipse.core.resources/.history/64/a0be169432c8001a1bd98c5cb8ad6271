package genetic_tetris;

import java.util.*;

public class Generic {
	private Weight[] w;
	private int size;

	public Generic(int count) {
		this.size = count;
		w = new Weight[this.size];

		Random rn = new Random();
		for(int i =0 ; i < w.length ; i++) {
			int blank_weight =  
			int round_block_weight = Math.random();
			int complete_line_weight = Math.random();
			int height_weight = Math.random() -2;
			
			w[i] = new Weight(i+1,0,blank_weight,complete_line_weight,round_block_weight,height_weight);
		}
	}

	public Weight[] get_weight() {
		return w;

	}

	public void cross_over() {
		double result = Integer.MIN_VALUE;
		int idx = 0;

		// rank가 가장 큰 유전자 선택
		for (int i = 0; i < size; i++) {
			if (result < w[i].score) {
				result = w[i].score;
				idx = i;
			}
		}
		Weight fitness = w[idx];
		w = new Weight[this.size];

		double f_bw = fitness.blank_weight;
		double f_cl = fitness.complete_line_weight;
		double f_rb = fitness.round_block_weight;
		double f_hw = fitness.height_weight;
		
		System.out.println("Select gene number : #" + idx);
		System.out.println("blank : #" + fitness.blank_weight);
		System.out.println("Complete line : #" + fitness.complete_line_weight);
		System.out.println("round block : #" + fitness.round_block_weight);
		System.out.println("height : #" + fitness.height_weight);
		
		w[0] = fitness;
		w[0].number = 0;
		w[0].score = 0;

		
		for(int i = 1 ; i< size ; i++) {
			double b = 
			
			w[i] = new Weight(i+1,0,b,cl,rb,hw);
		}

		System.out.println("complete generate\n");
	}

	public class Weight {
		int number = 0;
		long score;
		double blank_weight;
		double complete_line_weight;
		double round_block_weight;
		double height_weight;

		public Weight(int n, long s, double b, double cl, double rb, double hw) {
			this.number = n;
			this.score = s;
			this.blank_weight = b;
			this.complete_line_weight = cl;
			this.round_block_weight = rb;
			this.height_weight = hw;
		}

	}
}
