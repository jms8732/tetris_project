package genetic_tetris;

import java.util.*;

public class Generic {
	private Weight[] w;
	private int size;

	public Generic(int count) {
		this.size = count;
		w = new Weight[this.size];

		Random rn = new Random();
		for (int i = 0; i < w.length; i++) {
			double bw = Math.random() * 20 - 10;
			double clw = Math.random() * 20 - 10;
			double rbw = Math.random() * 20 - 10;
			double hw = Math.random() * 20 - 10;
			double dbw = Math.random() * 20 - 10;
			double sbw = Math.random() * 20 - 10;
			double blw = Math.random() * 20 - 10;
			double hole = Math.random() * 20 - 10;
			double ubw = Math.random() * 20 - 10;

			w[i] = new Weight(i + 1, 0, 0, bw, clw, rbw, hw, dbw, sbw, blw, hole, ubw);
		}
	}

	public Weight[] get_weight() {
		return w;

	}

	public void cross_over() {
		List<Weight> list = new ArrayList<>();
		// rank가 가장 큰 유전자 선택
		for (int i = 0; i < size; i++) {
			list.add(w[i]);
		}

		list.sort(new Comparator<Weight>() {

			@Override
			public int compare(Weight o1, Weight o2) {
				// TODO Auto-generated method stub
				if (o1.score > o2.score)
					return -1;
				else if (o1.score == o2.score) {
					if (o1.line > o2.line)
						return -1;
					else
						return 1;
				} else
					return 1;
			}

		});
		
		w = new Weight[this.size];

		
		System.out.println("complete generate\n");
	}
	
	private static void selection(List<Weight> list) {
		for(int i = 0 ; i < list.size() ; i++) {
			
		}
	}
}
