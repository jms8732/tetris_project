package genetic_tetris;

import java.util.*;

public class Generic {
	private Weight[] w;
	private int size;

	public Generic(int count) {
		this.size = count;
		w = new Weight[this.size];

		Random rn = new Random();
		for (int i = 0; i < w.length; i++) {
			int n = i + 1;
			int r = 0;
			double b = (rn.nextDouble() * 2) - 1;
			double c = (rn.nextDouble() * 2) - 1;
			double cc = (rn.nextDouble() * 2) - 1;
			double hw = (rn.nextDouble() * 2) - 1;
			w[i] = new Weight(n, r, b, c, cc, hw);
		}
	}

	public Weight[] get_weight() {
		return w;

	}

	public void cross_over() {
		double result = 0.0;
		int idx = 0;

		// rank가 가장 큰 유전자 선택
		for (int i = 0; i < 100; i++) {
			if (result < Math.abs(w[i].rank)) {
				result = Math.abs(w[i].rank);
				idx = i;
			}
		}
		Weight fitness = w[idx];

		System.out.println("Fitness : " + fitness.rank);
		System.out.println("blank : " + fitness.blank_weight + " connected : " + fitness.connected_weight + " line : "
				+ fitness.complete_line_weight);
		w = new Weight[this.size];
		Random rn = new Random();

		for (int i = 0; i < 100; i++) {
			double b = fitness.blank_weight - (rn.nextDouble() * 2 - 1);
			double c = fitness.complete_line_weight - (rn.nextDouble() * 2 - 1);
			double cc = fitness.connected_weight - (rn.nextDouble() * 2 - 1);
			double hw = fitness.height_weight - (rn.nextDouble() * 2 - 1);
			w[i] = new Weight(i + 1, 0, b, c, cc, hw);
		}
	}

	public class Weight {
		int number = 0;
		double rank = 0;
		double blank_weight;
		double complete_line_weight;
		double connected_weight;
		double height_weight;

		public Weight(int n, double r, double b, double c, double cc, double hw) {
			this.number = n;
			this.rank = r;
			this.blank_weight = b;
			this.complete_line_weight = c;
			this.connected_weight = cc;
			this.height_weight = hw;
		}

	}
}
