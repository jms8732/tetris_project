package genetic_tetris;

import java.util.*;

public class Generic {
	private Weight[] w;

	public Generic(int count) {
		w = new Weight[count];

		Random rn = new Random();
		for (int i = 0; i < w.length; i++) {
			int n = i + 1;
			int r = 0;
			double b = (rn.nextDouble() * 2) - 1;
			double c = (rn.nextDouble() * 2) - 1;
			double cc = (rn.nextDouble() * 2) - 1;
			w[i] = new Weight(n, r, b, c, cc);
		}
	}

	public Weight[] get_weight() {
		return w;

	}

	public void cross_over() {
		double result = 0.0;
		int idx = 0;
		for (int i = 0; i < 100; i++) {
			if (result < w[i].rank) {
				result = w[i].rank;
				idx = i;
			}
		}
	}

	public class Weight {
		int number = 0;
		double rank = 0;
		double blank_weight;
		double complete_line_weight;
		double connected_weight;

		public Weight(int n, double r, double b, double c, double cc) {
			this.number = n;
			this.rank = r;
			this.blank_weight = b;
			this.complete_line_weight = c;
			this.connected_weight = cc;
		}

	}
}
