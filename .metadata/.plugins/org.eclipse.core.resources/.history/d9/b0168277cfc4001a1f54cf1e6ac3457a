package toy_project;

import java.util.*;

public class PlayThread extends Thread {
	private static boolean block_finish = false;
	public static int[][] board = new int[20][10];
	public static List<Point> b = null;
	private int[] ud = { 1, 0, 0 };
	private int[] rl = { 0, -1, 1 };
	public static int dir = 0;

	@Override
	public void run() {
		tetris_board board = new tetris_board();
		tetris_block block = new tetris_block();

		try {
			while (true) {
				if (!block_finish) {
					Random rand = new Random();
					int n = rand.nextInt(5);

					b = block.make_block(n);
					board.set_block(b);

					block_finish = true;
				}

				Thread.sleep(1000);
				
				board.repaint();

			}
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	private void can_move() {
		for (Point p : b) {
			int nx = p.y + ud[dir];
			int ny = p.x + rl[dir];

			// 테트리스 보드판 밖으로 나간 경우
			if (nx < 0 || nx >= 10 || ny < 0 || ny >= 20)
				return;

			// 밑에 블록이 존재할 경우
			if (board[nx][ny] == 1)
				return;
		}
		
		for(Point p : b) {
			p.x += rl[dir];
			p.y += ud[dir];
		}
		return true;
	}
}
